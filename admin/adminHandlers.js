const ADMIN_ID = 1370034279;
const User = require("../models/User");

let isWaitingForMessage = false;

const setupAdminHandlers = (bot) => {
  bot.onText(/\/stats/, async (msg) => {
    const chatId = msg.chat.id;

    if (chatId !== ADMIN_ID) {
      return bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
    }

    try {
      const users = await User.find({}, "telegramId username");
      const userCount = users.length;

      const message = `üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞: ${userCount}</b>`;
      await bot.sendMessage(chatId, message, { parse_mode: "HTML" });
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /stats:", error);
      bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.");
    }
  });

  bot.onText(/\/mes/, async (msg) => {
    const chatId = msg.chat.id;

    if (chatId !== ADMIN_ID) {
      return bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
    }

    isWaitingForMessage = true;
    await bot.sendMessage(
      chatId,
      "‚úâÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. " +
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ <b>-</b>.",
      { parse_mode: "HTML" }
    );
  });

  // –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.on("message", async (msg) => {
    const chatId = msg.chat.id;

    // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–µ-–∞–¥–º–∏–Ω–∞ –∏–ª–∏ –º—ã –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è, –≤—ã—Ö–æ–¥–∏–º
    if (chatId !== ADMIN_ID || !isWaitingForMessage) return;

    // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "/", –∑–Ω–∞—á–∏—Ç —ç—Ç–æ, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –¥—Ä—É–≥–∞—è –∫–æ–º–∞–Ω–¥–∞ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    if (msg.text && msg.text.startsWith("/")) return;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É
    if (msg.text && msg.text.trim() === "-") {
      isWaitingForMessage = false;
      return bot.sendMessage(chatId, "‚ùå –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.");
    }

    // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞–∑–æ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º
    try {
      // –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const users = await User.find({}, "telegramId");
      let successCount = 0;

      // –ï—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ
      if (msg.photo && msg.photo.length > 0) {
        const largestPhoto = msg.photo[msg.photo.length - 1].file_id;
        const caption = msg.caption || ""; // –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π)

        for (const user of users) {
          try {
            await bot.sendPhoto(user.telegramId, largestPhoto, {
              caption: caption,
              parse_mode: "HTML",
            });
            successCount++;
          } catch (error) {
            console.error(
              `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.telegramId}:`,
              error
            );
          }
        }
      }
      // –ò–Ω–∞—á–µ, –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç
      else if (msg.text) {
        const text = msg.text;
        for (const user of users) {
          try {
            await bot.sendMessage(user.telegramId, text, {
              parse_mode: "HTML",
            });
            successCount++;
          } catch (error) {
            console.error(
              `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.telegramId}:`,
              error
            );
          }
        }
      } else {
        // –ï—Å–ª–∏ –ø—Ä–∏—à–µ–ª –¥—Ä—É–≥–æ–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–∏–¥–µ–æ, –¥–æ–∫—É–º–µ–Ω—Ç) ‚Äî –º–æ–∂–Ω–æ –¥–æ–ø–∏—Å–∞—Ç—å –ª–æ–≥–∏–∫—É
        await bot.sendMessage(
          chatId,
          "–°–µ–π—á–∞—Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–∞ –∏ —Ñ–æ—Ç–æ. " +
            "–î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã –≤–ª–æ–∂–µ–Ω–∏–π."
        );
        return;
      }

      // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É
      isWaitingForMessage = false;
      await bot.sendMessage(
        chatId,
        `‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ(—è) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã <b>${successCount}</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.`,
        { parse_mode: "HTML" }
      );
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏:", error);
      bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏.");
    }
  });

  // –ö–æ–º–∞–Ω–¥–∞ /plus –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏–Ω–æ–≤ (–ø—Ä–∏–º–µ—Ä –∏–∑ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞)
  bot.onText(/\/plus (\d+) (\d+)/, async (msg, match) => {
    const chatId = msg.chat.id;

    if (chatId !== ADMIN_ID) {
      return bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.");
    }

    try {
      const userId = parseInt(match[1], 10); // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const spinsToAdd = parseInt(match[2], 10); // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∏–Ω–æ–≤

      if (isNaN(userId) || isNaN(spinsToAdd) || spinsToAdd <= 0) {
        return bot.sendMessage(
          chatId,
          "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∏–Ω–æ–≤."
        );
      }

      const user = await User.findOne({ telegramId: userId });
      if (!user) {
        return bot.sendMessage(
          chatId,
          `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`
        );
      }

      user.spins += spinsToAdd;
      await user.save();

      return bot.sendMessage(
        chatId,
        `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID ${userId} –¥–æ–±–∞–≤–ª–µ–Ω–æ ${spinsToAdd} —Å–ø–∏–Ω–æ–≤. ` +
          `–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∏–Ω–æ–≤: ${user.spins}.`
      );
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /plus:", error);
      return bot.sendMessage(
        chatId,
        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
      );
    }
  });
};

module.exports = { setupAdminHandlers };